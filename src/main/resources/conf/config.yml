### ANY CHANGES TO THIS FILE DOES NOT REQUIRE A RESTART ###
# Each queueManager requires 9 threads to fetch its metrics concurrently and 1 main thread to run the extension.
# So for ex, if there are 2 queueManagers configured, please set the numberOfThreads to be 19 (2*9+1)
numberOfThreads: 20

#This will create it in specific Tier aka Component. Replace <COMPONENT_ID>. Please make sure to have a trailing |.
#To find out the COMPONENT_ID, please see the screen shot here https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java
metricPrefix: "Server|Component:<COMPONENT_ID>|Custom Metrics|WebsphereMQ|"
#For SIM
#metricPrefix: "Custom Metrics|WebsphereMQ|"

#This is the timeout on queue metrics and channel metrics threads.Default value is 20 seconds.
#No need to change the default unless you know what you are doing.
#queueMetricsCollectionTimeoutInSeconds: 40
#channelMetricsCollectionTimeoutInSeconds: 40
#topicMetricsCollectionTimeoutInSeconds: 40

#Uncomment only if encryption of passwords is wanted.
#encryptionKey: ""

queueManagers:
  - displayName: "QM1"
    # displayName (optional). This will be your QM name that will show up in AppD metric path.
    host: "localhost"  # Will work after port mapping
    port: 1414

    #Actual name of the queue manager
    name: "QM1"

    #The transport type for the queue manager connection, the default is "Bindings" for a binding type connection
    #For bindings type, connection WMQ extension (i.e machine agent) need to be on the same machine on which WebbsphereMQ server is running
    #For client type, connection change it to "Client".
    transportType: "Client"

    #Channel name of the queue manager, channel should be server-conn type.
    #This field is not required in case of transportType: Bindings
    channelName: "DEV.ADMIN.SVRCONN"

    #for user access level, please check "Access Permissions" section on the extensions page
    #comment out the username and password in case of transportType: Bindings.
    username: "admin"
    password: "root"

    #Uncomment only if encryption of passwords is wanted.
    #encryptedPassword: ""

    #PCF requests are always sent to SYSTEM.ADMIN.COMMAND.QUEUE. The PCF responses to these requests are sent to the default reply-to queue called
    #SYSTEM.DEFAULT.MODEL.QUEUE. However, you can override this behavior and send it to a temporary dynamic queue by changing the modelQueueName and replyQueuePrefix fields.
    #For more details around this https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.5.0/com.ibm.mq.ref.adm.doc/q083240_.htm & https://www.ibm.com/support/knowledgecenter/SSFKSJ_8.0.0/com.ibm.mq.adm.doc/q020010_.htm
    modelQueueName: "Q1"
    #replyQueuePrefix: ""


    #Sets the CCSID used in the message descriptor of request and response messages. The default value is MQC.MQCCSI_Q_MGR.
    #To set this, please use the integer value.
    #ccsid:

    #Sets the encoding used in the message descriptor of request and response messages. The default value is MQC.MQENC_NATIVE.
    #To set this, please use the integer value.
    #encoding:

    # IBM Cipher Suite e.g. "SSL_RSA_WITH_AES_128_CBC_SHA256"..
    # For translation to IBM Cipher  http://www.ibm.com/support/knowledgecenter/SSFKSJ_8.0.0/com.ibm.mq.dev.doc/q113210_.htm
    #cipherSuite: ""


    queueFilters:
        #Can provide complete queue name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
             #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
             #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM","AMQ"]


    channelFilters:
        #Can provide complete channel name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
           #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
           #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM"]

    listenerFilters:
        #Can provide complete channel name or generic names. A generic name is a character string followed by an asterisk (*),
        #for example ABC*, and it selects all objects having names that start with the selected character string.
        #An asterisk on its own matches all possible names.
        include: ["*"]
        exclude:
           #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
           #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM"]

    topicFilters:
        # For topics, IBM MQ uses the topic wildcard characters ('#' and '+') and does not treat a trailing asterisk as a wildcard
        # https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.pla.doc/q005020_.htm
        include: ["#"]
        exclude:
             #type value: STARTSWITH, EQUALS, ENDSWITH, CONTAINS
           - type: "STARTSWITH"
             #The name of the queue or queue name pattern as per queue filter, comma separated values
             values: ["SYSTEM","$SYS"]

mqMetrics:
  # This Object will extract queue manager metrics
  - metricsType: "queueMgrMetrics"
    metrics:
      include:
        ################### Added metrics
        - QueueManagerName:
            alias: "Queue Manager Name"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQCA_Q_MGR_NAME"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - Platform:
            alias: "Platform"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_PLATFORM"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MQVersion:
            alias: "MQ Version"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_VERSION"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - CCSID:
            alias: "Character Set ID"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_CODED_CHAR_SET_ID"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MaxHandles:
            alias: "Max Handles"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MAX_HANDLES"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MaxMessageLength:
            alias: "Max Message Length"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MAX_MSG_LENGTH"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MonitoringQueue:
            alias: "Queue Monitoring Level"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MONITORING_Q"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MonitoringChannel:
            alias: "Channel Monitoring Level"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MONITORING_CHANNEL"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - CommandLevel:
            alias: "Command Level"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_COMMAND_LEVEL"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MaxPriority:
            alias: "Max Priority"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MAX_PRIORITY"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - MaxUncommittedMsgs:
            alias: "Max Uncommitted Messages"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MAX_UNCOMMITTED_MSGS"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        - TriggerInterval:
            alias: "Trigger Interval"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_TRIGGER_INTERVAL"
            ibmCommand: "MQCMD_INQUIRE_Q_MGR"
        ###################
        - Status:
            alias: "Status"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_Q_MGR_STATUS"
            aggregationType: "OBSERVATION"
            timeRollUpType: "AVERAGE"
            clusterRollUpType: "INDIVIDUAL"
        - ConnectionCount:
            alias: "ConnectionCount"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_CONNECTION_COUNT"
      
  # This Object will extract queue metrics
  - metricsType: "queueMetrics"
    metrics:
      include:
        ################### Added metrics
        - QueueName:
            alias: "Queue Name" 
            ibmConstant: "com.ibm.mq.constants.CMQC.MQCA_Q_NAME"
            ibmCommand: "MQCMD_INQUIRE_Q"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - OldestMsgAge:
            alias: "Oldest Message Age"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_OLDEST_MSG_AGE"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
        - LastGetDate:
            alias: "Last Get Date"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACF_LAST_GET_DATE"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - LastGetTime:
            alias: "Last Get Time"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACF_LAST_GET_TIME"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - LastPutDate:
            alias: "Last Put Date"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACF_LAST_PUT_DATE"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - LastPutTime:
            alias: "Last Put Time"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACF_LAST_PUT_TIME"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        # Note: May return -3 for system queues or queues where monitoring is not applicable
        # -3 = Not applicable, 0 = Off, 1 = Low, 2 = Medium, 3 = High
        - QueueMonitoring:
            alias: "Queue Monitoring"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MONITORING_Q"
            ibmCommand: "MQCMD_INQUIRE_Q"
        - QueueDescription:
            alias: "Queue Description"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQCA_Q_DESC"
            ibmCommand: "MQCMD_INQUIRE_Q"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        # Queue timing and depth metrics
        - QueueDepthHigh:
            alias: "Queue Depth High Limit"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_Q_DEPTH_HIGH_LIMIT"
            ibmCommand: "MQCMD_INQUIRE_Q"
        - QueueDepthLow:
            alias: "Queue Depth Low Limit" 
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_Q_DEPTH_LOW_LIMIT"
            ibmCommand: "MQCMD_INQUIRE_Q"
   
        - GetStatus:
            alias: "Get Status"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_INHIBIT_GET"
            ibmCommand: "MQCMD_INQUIRE_Q"
        - PutStatus:
            alias: "Put Status"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_INHIBIT_PUT"
            ibmCommand: "MQCMD_INQUIRE_Q"
        - MaxQueueDepth:
            alias: "Max Queue Depth"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MAX_Q_DEPTH"
            ibmCommand: "MQCMD_INQUIRE_Q"
          
        - CurrentQueueDepth:
            alias: "Current Queue Depth"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_CURRENT_Q_DEPTH"
            ibmCommand: "MQCMD_INQUIRE_Q"
          
        - OpenInputCount:
            alias: "Open Input Count"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_OPEN_INPUT_COUNT"
            ibmCommand: "MQCMD_INQUIRE_Q"
          
        - OpenOutputCount:
            alias: "Open Output Count"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_OPEN_OUTPUT_COUNT"
            ibmCommand: "MQCMD_INQUIRE_Q"

        - UncommittedMsgs:
            alias: "UncommittedMsgs"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_UNCOMMITTED_MSGS"
            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"

#        - OnQTime:
#            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACF_Q_TIME_INDICATOR"
#            ibmCommand: "MQCMD_INQUIRE_Q_STATUS"
#            aggregationType: "OBSERVATION"
#            timeRollUpType: "CURRENT"
#            clusterRollUpType: "INDIVIDUAL"

#        - HighQDepth:
#            alias: "HighQDepth"
#            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_HIGH_Q_DEPTH"
#            ibmCommand: "MQCMD_RESET_Q_STATS"

#        - MsgDeqCount:
#            alias: "MsgDeqCount"
#            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MSG_DEQ_COUNT"
#            ibmCommand: "MQCMD_RESET_Q_STATS"

#        - MsgEnqCount:
#            alias: "MsgEnqCount"
#            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_MSG_ENQ_COUNT"
#            ibmCommand: "MQCMD_RESET_Q_STATS"

      
  # This Object will extract channel metrics
  - metricsType: "channelMetrics"
    metrics:
      include:
        ################### Added metrics
        - ChannelName:
            alias: "Channel Name"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_CHANNEL_NAME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - ChannelInstType:
            alias: "Channel Instance Type"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_CHANNEL_INSTANCE_TYPE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - ChannelType:
            alias: "Channel Type"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_CHANNEL_TYPE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
        # Alternative to CurrentActionState - using Channel Substate instead
        - ChannelSubstate:
            alias: "Channel Substate"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_CHANNEL_SUBSTATE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - HeartbeatInterval:
            alias: "Heartbeat Interval"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_HB_INTERVAL"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
        - KeepAliveInterval:
            alias: "Keep Alive Interval"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_KEEP_ALIVE_INTERVAL"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
        - CurrentSharingConversations:
            alias: "Current Sharing Conversations"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_SHARING_CONVERSATIONS"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
        - LastMessageDate:
            alias: "Last Message Date"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_LAST_MSG_DATE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - LastMessageTime:
            alias: "Last Message Time"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_LAST_MSG_TIME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - LocalAddress:
            alias: "Local Address"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_LOCAL_ADDRESS"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - MCAUserID:
            alias: "MCA User ID"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_MCA_USER_ID"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - MCAStatus:
            alias: "MCA Status"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_MCA_STATUS"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - RemoteQmgrName:
            alias: "Remote Queue Manager Name"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQCA_REMOTE_Q_MGR_NAME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - XmitQName:
            alias: "Xmit Queue Name"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_XMIT_Q_NAME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - ConnectionName:
            alias: "Connection Name"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_CONNECTION_NAME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1
        - ShortRetriesLeft:
            alias: "Short Retries Left"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_SHORT_RETRIES_LEFT"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - LongRetriesLeft:
            alias: "Long Retries Left"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_LONG_RETRIES_LEFT"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - ShortTermBatchSize:
            alias: "Short Term Batch Size"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BATCH_INTERVAL"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - LongTermBatchSize:
            alias: "Long Term Batch Size"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BATCH_DATA_LIMIT"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - ShortTermCompressionRate:
            alias: "Short Term Compression Rate"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_COMPRESSION_RATE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - LongTermCompressionRate:
            alias: "Long Term Compression Rate"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_COMPRESSION_RATE"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - ShortTermCompressionTime:
            alias: "Short Term Compression Time"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_COMPRESSION_TIME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - LongTermCompressionTime:
            alias: "Long Term Compression Time"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_COMPRESSION_TIME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
        - SSLShortPeerName:
            alias: "SSL Short Peer Name"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQCACH_SSL_SHORT_PEER_NAME"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            # STRING VALUE - Will be handled in code: incorporate into metric path, value = 1


        # Channel Monitoring level (similar to Queue Monitoring) - MQIACH_MONITORING not available in this MQ version
        # - ChannelMonitoring:
        #     alias: "Channel Monitoring"
        #     ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_MONITORING"
        #     ibmCommand: "MQCMD_INQUIRE_CHANNEL"
        ###################
        - Messages:
            alias: "Messages"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_MSGS"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
          
        - Status:
            alias: "Status"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_CHANNEL_STATUS"  #http://www.ibm.com/support/knowledgecenter/SSFKSJ_7.5.0/com.ibm.mq.ref.dev.doc/q090880_.htm
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
            aggregationType: "OBSERVATION"
            timeRollUpType: "AVERAGE"
            clusterRollUpType: "INDIVIDUAL"
          
        - ByteSent:
            alias: "Byte Sent"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BYTES_SENT"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
          
        - ByteReceived:
            alias: "Byte Received"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BYTES_RECEIVED"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
          
        - BuffersSent:
            alias: "Buffers Sent"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BUFFERS_SENT"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"
          
        - BuffersReceived:
            alias: "Buffers Received"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_BUFFERS_RECEIVED"
            ibmCommand: "MQCMD_INQUIRE_CHANNEL_STATUS"


  # Channel Statistics metrics section - removed duplicates that are already in channelMetrics
  # This section would be for metrics collected from SYSTEM.ADMIN.STATISTICS.QUEUE
  # which requires MQ statistics to be enabled (MONCHL/STATINT)
  - metricsType: "channelStatsMetrics"
    metrics:
      include:
        # Add any channel statistics-specific metrics here that are not in channelMetrics

  - metricsType: "listenerMetrics"
    metrics:
      include:
        - Status:
            alias: "Status"
            ibmConstant: "com.ibm.mq.constants.CMQCFC.MQIACH_LISTENER_STATUS"
            aggregationType: "OBSERVATION"
            timeRollUpType: "AVERAGE"
            clusterRollUpType: "INDIVIDUAL"

  # This Object will extract topic metrics
  - metricsType: "topicMetrics"
    metrics:
      include:
        - PublishCount:
            alias: "Publish Count"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_PUB_COUNT"
            ibmCommand: "MQCMD_INQUIRE_TOPIC_STATUS"
        - SubscriptionCount:
            alias: "Subscription Count"
            ibmConstant: "com.ibm.mq.constants.CMQC.MQIA_SUB_COUNT"
            ibmCommand: "MQCMD_INQUIRE_TOPIC_STATUS"

#Run it as a scheduled task instead of running every minute.
#If you want to run this every minute, comment this out
#taskSchedule:
#  numberOfThreads: 1
#  taskDelaySeconds: 300


sslConnection:
  trustStorePath: ""
  trustStorePassword: ""
  trustStoreEncryptedPassword: ""

  keyStorePath: ""
  keyStorePassword: ""
  keyStoreEncryptedPassword: ""


# If any of the following fields are not set, the values of the specific fields are set from the system properties of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent configFile. Please refer to ControllerInfoFactory for more details.
controllerInfo:
  controllerHost: "controller"
  controllerPort: 8080
  account: "customer1"
  username: "user"
  password: "welcome"
  encryptedPassword: ""
  encryptionKey: ""
  controllerSslEnabled: false
  enableOrchestration: false
  uniqueHostId: ""
  accountAccessKey: ""
  machinePath: ""
  simEnabled: true
  applicationName: ""
  tierName: ""
  nodeName: ""